services:
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:latest
    hostname: crowdsec
    environment:
      - GID=1000
      - COLLECTIONS=crowdsecurity/caddy crowdsecurity/http-cve crowdsecurity/whitelist-good-actors firix/authentik LePresidente/adguardhome crowdsecurity/home-assistant
      - BOUNCER_KEY_CADDY=${CROWDSEC_API_KEY}
      - BOUNCER_KEY_CLOUDFLARE=${CROWDSEC_API_KEY}
    volumes:
      - /mnt/jabberwock/crowdsec/data:/var/lib/crowdsec/data
      - /mnt/jabberwock/crowdsec/config:/etc/crowdsec
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/jabberwock/crowdsec/acquis.yml:/etc/crowdsec/acquis.yml
      - /mnt/jabberwock/caddy/logs:/var/logs/caddy:ro
    networks:
      - crowdsec_network
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true

  cloudflare_bouncer:
    image: crowdsecurity/cloudflare-bouncer
    restart: unless-stopped
    environment:
      - CROWDSEC_API_KEY=${CROWDSEC_API_KEY}
      - CROWDSEC_HOST=http://crowdsec:8080/
    networks:
      - crowdsec_network
    volumes:
      - /mnt/jabberwock/crowdsec/config:/etc/crowdsec

  ouroboros:
    container_name: ouroboros
    hostname: docker-monitor
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - IGNORE=mongo influxdb postgres mariadb
      - TZ=Europe/Dublin
      - DATA_EXPORT=prometheus
      - PROMETHEUS_ADDR=0.0.0.0
      - PROMETHEUS_PORT=9090
    restart: unless-stopped
    networks:
      - grafana_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/root/.docker/config.json

networks:
  crowdsec_network:
    external: true
  grafana_network:
    external: true
