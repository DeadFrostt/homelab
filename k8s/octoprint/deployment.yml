apiVersion: apps/v1
kind: Deployment
metadata:
  name: octoprint-deployment
  namespace: 3dprint
spec:
  selector:
    matchLabels:
      app: octoprint
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: octoprint
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: octoprint-data
          persistentVolumeClaim:
            claimName: octoprint-pvc
      containers:
        - name: octoprint
          image: octoprint/octoprint
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   timeoutSeconds: 1
          #   periodSeconds: 10
          #   failureThreshold: 3
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   timeoutSeconds: 1
          #   periodSeconds: 10
          #   failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
          volumeMounts:
            - name: octoprint-data
              mountPath: /octoprint
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spoolman-deployment
  namespace: 3dprint
spec:
  selector:
    matchLabels:
      app: spoolman
  replicas: 1
  template:
    metadata:
      labels:
        app: spoolman
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: spoolman-data
          persistentVolumeClaim:
            claimName: spoolman-pvc
      containers:
        - name: spoolman
          image: ghcr.io/donkie/spoolman:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   timeoutSeconds: 1
          #   periodSeconds: 10
          #   failureThreshold: 3
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   timeoutSeconds: 1
          #   periodSeconds: 10
          #   failureThreshold: 3
          # startupProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 1
          #   periodSeconds: 10
          volumeMounts:
            - name: spoolman-data
              mountPath: /home/app/.local/share/spoolman
          env:
            - name: TZ
              value: "Europe/Dublin"
            - name: SPOOLMAN_METRICS_ENABLED
              value: "TRUE"
            - name: SPOOLMAN_DB_TYPE
              value: postgres
            - name: SPOOLMAN_DB_HOST
              value: postgres-postgresql.databases.svc.cluster.local
            - name: SPOOLMAN_DB_PORT
              value: "5432"
            - name: SPOOLMAN_DB_NAME
              value: spoolman
            - name: SPOOLMAN_DB_USERNAME
              value: postgres
            - name: SPOOLMAN_DB_PASSWORD
              value: postgres
            - name: SPOOLMAN_DB_NAME
              value: spoolman
