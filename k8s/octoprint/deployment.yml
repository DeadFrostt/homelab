apiVersion: apps/v1
kind: Deployment
metadata:
  name: octoprint-deployment
  namespace: octoprint
spec:
  selector:
    matchLabels:
      app: octoprint
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: octoprint
    spec:
      volumes:
        - name: octoprint-data
          persistentVolumeClaim:
            claimName: octoprint-pvc
      containers:
        - name: octoprint
          image: ghcr.io/brunostjohn/octoprint:main
          env:
            - name: SOCAT_PRINTER_TYPE
              value: tcp
            - name: SOCAT_PRINTER_HOST
              value: akri-3dprinter-svc.octoprint.svc.cluster.local
            - name: SOCAT_PRINTER_PORT
              value: 2000
            - name: SOCAT_PRINTER_LINK
              value: /dev/printer0
          securityContext:
            privileged: true
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
          resources:
            requests:
              akri.sh/akri-3dprinter: "1"
              memory: "256Mi"
              cpu: "100m"
            limits:
              akri.sh/akri-3dprinter: "1"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          volumeMounts:
            - name: octoprint-data
              mountPath: /octoprint
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spoolman-deployment
  namespace: octoprint
spec:
  selector:
    matchLabels:
      app: spoolman
  replicas: 1
  template:
    metadata:
      labels:
        app: spoolman
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: spoolman-data
          persistentVolumeClaim:
            claimName: spoolman-pvc
      containers:
        - name: spoolman
          image: ghcr.io/donkie/spoolman:latest
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8000
          livenessProbe:
            httpGet:
              path: /
              port: 8000
          volumeMounts:
            - name: spoolman-data
              mountPath: /home/app/.local/share/spoolman
          env:
            - name: TZ
              value: "Europe/Dublin"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mjpeg-streamer-deployment
  namespace: octoprint
spec:
  selector:
    matchLabels:
      app: mjpeg-streamer
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mjpeg-streamer
    spec:
      containers:
        - name: mjpeg-streamer
          image: davidhamm/mjpg-streamer
          env:
            - name: RESOLUTION
              value: "1280x720"
          securityContext:
            privileged: true
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              akri.sh/akri-webcam: "1"
              memory: "128Mi"
              cpu: "100m"
            limits:
              akri.sh/akri-webcam: "1"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
