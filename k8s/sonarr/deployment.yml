apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: entertainment
spec:
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: sonarr-config
          nfs:
            server: 10.0.0.2
            path: /export/jabberwock
        - name: sonarr-data
          nfs:
            server: 10.0.0.2
            path: /export/jabberwock
      containers:
        - name: sonarr
          image: linuxserver/sonarr:4.0.8
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8989
              name: http
              protocol: TCP
          environment:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Dublin"
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
              subPath: /casaos/sonarr
            - name: sonarr-data
              mountPath: /data
              subPath: /entertainment
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
        - name: sonarr-exporter
          image: ghcr.io/onedr0p/exportarr:v1.5.3
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "9707"
            - name: URL
              value: "http://sonarr.entertainment.svc.cluster.local:8989"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: sonarr-exporter
                  key: api-key
          ports:
            - name: monitoring
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
