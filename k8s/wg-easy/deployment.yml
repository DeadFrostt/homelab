apiVersion: apps/v1
kind: Deployment
metadata:
  name: wg-easy
  namespace: default
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: wg-easy
  template:
    metadata:
      labels:
        app: wg-easy
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: wg-easy
      containers:
        - name: wg-easy
          image: ghcr.io/wg-easy/wg-easy:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_MODULE
                - NET_RAW
          resources:
            requests:
              memory: 512Mi
              cpu: "500m"
            limits:
              memory: 1Gi
              cpu: "1"
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
            - containerPort: 51821
              protocol: TCP
              name: metrics
            - containerPort: 51820
              protocol: UDP
              name: wireguard
            - containerPort: 2111
              protocol: TCP
              name: ollama-1
            - containerPort: 2112
              protocol: TCP
              name: comfyui-1
            - containerPort: 2121
              protocol: TCP
              name: ollama-2
            - containerPort: 2122
              protocol: TCP
              name: comfyui-2
          envFrom:
            - configMapRef:
                name: wg-easy-config
          env:
            - name: LANG
              value: en
            - name: WG_HOST
              value: wg.slightlysus.link
            - name: PORT
              value: "80"
            - name: WG_PORT
              value: "51820"
            - name: ENABLE_PROMETHEUS_METRICS
              value: "true"
          volumeMounts:
            - name: data
              mountPath: /etc/wireguard
          readinessProbe:
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
