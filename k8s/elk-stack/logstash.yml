apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: logstash
  namespace: monitoring
spec:
  count: 1
  elasticsearchRefs:
    - name: elasticsearch
      namespace: monitoring
      clusterName: es
  version: 8.15.3
  pipelines:
    - pipeline.id: main
      config.string: |
        input {
          beats {
            port => 5044
          }
        }

        filter {
          mutate {
            rename => {
              "level" => "log.level"
            }
            lowercase => ["loglevel", "log.level"]
            rename => {
              "[kubernetes][labels][app]" => "service.name"
            }
            rename => {
              "[kubernetes][labels][app_kubernetes_io/instance]" => "service.name"
            }
            rename => {
              "[kubernetes][labels][cnpg_io/cluster]" => "service.name"
            }
            rename => {
              "[kubernetes][labels][cnpg_io/poolerName]" => "service.name"
            }
            rename => {
              "[kubernetes][labels][k8s-app]" => "service.name"
            }
            copy => {
              "[kubernetes][namespace]" => "orchestrator.namespace"
            }
            copy => {
              "[kubernetes][container][name]" => "container.name"
            }
          }

          if [kubernetes][labels][app_kubernetes_io/instance] != "jabberwock-iscsi" and [kubernetes][labels][app_kubernetes_io/instance] != "floof-iscsi" and [kubernetes][labels][app_kubernetes_io/instance] != "jabberwock-nfs" and [kubernetes][labels][app_kubernetes_io/instance] != "floof-nfs" and [message] != "" and [message] != "\n" and [message] != " " {
            json {
              source => "message"
              skip_on_invalid_json => true
            }

            date {
              match => [ "timestamp", "ISO8601", "MMM dd yyyy HH:mm:ss", "UNIX", "UNIX_MS", "TAI64N" ]
            }

            date {
              match => [ "ts", "ISO8601", "MMM dd yyyy HH:mm:ss", "UNIX", "UNIX_MS", "TAI64N" ]
            }

            date {
              match => [ "time", "ISO8601", "MMM dd yyyy HH:mm:ss", "UNIX", "UNIX_MS", "TAI64N" ]
            }
          }

          if [kubernetes][labels][app] == "longhorn-manager" {
            kv {
              source => "message"
              field_split => " "
              value_split => "="
            }

            mutate {
              add_field => {
                "service.name" => "longhorn-manager"
              }
            }

            date {
              match => [ "timestamp", "ISO8601", "MMM dd yyyy HH:mm:ss", "UNIX", "UNIX_MS", "TAI64N" ]
            }

            date {
              match => [ "ts", "ISO8601", "MMM dd yyyy HH:mm:ss", "UNIX", "UNIX_MS", "TAI64N" ]
            }
          }
        }

        output {
          elasticsearch {
            hosts => [ "${ES_ES_HOSTS}" ]
            user => "${ES_ES_USER}"
            password => "${ES_ES_PASSWORD}"
            ssl_certificate_authorities => "${ES_ES_SSL_CERTIFICATE_AUTHORITY}"
          }
        }
  services:
    - name: beats
      service:
        spec:
          type: NodePort
          ports:
            - port: 5044
              name: "filebeat"
              protocol: TCP
              targetPort: 5044
